[
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 1,
        "menuName": "系统管理",
        "parentName": null,
        "parentId": 0,
        "orderNum": "1",
        "url": "#",
        "target": "",
        "menuType": "M",
        "visible": "0",
        "isRefresh": "1",
        "perms": "",
        "icon": "fa fa-gear",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 2,
        "menuName": "系统监控",
        "parentName": null,
        "parentId": 0,
        "orderNum": "2",
        "url": "#",
        "target": "",
        "menuType": "M",
        "visible": "0",
        "isRefresh": "1",
        "perms": "",
        "icon": "fa fa-video-camera",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 3,
        "menuName": "系统工具",
        "parentName": null,
        "parentId": 0,
        "orderNum": "3",
        "url": "#",
        "target": "",
        "menuType": "M",
        "visible": "0",
        "isRefresh": "1",
        "perms": "",
        "icon": "fa fa-bars",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 100,
        "menuName": "用户管理",
        "parentName": null,
        "parentId": 1,
        "orderNum": "1",
        "url": "/system/user",
        "target": "",
        "menuType": "C",
        "visible": "0",
        "isRefresh": "1",
        "perms": "system:user:view",
        "icon": "fa fa-user-o",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 101,
        "menuName": "角色管理",
        "parentName": null,
        "parentId": 1,
        "orderNum": "2",
        "url": "/system/role",
        "target": "",
        "menuType": "C",
        "visible": "0",
        "isRefresh": "1",
        "perms": "system:role:view",
        "icon": "fa fa-user-secret",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 102,
        "menuName": "菜单管理",
        "parentName": null,
        "parentId": 1,
        "orderNum": "3",
        "url": "/system/menu",
        "target": "",
        "menuType": "C",
        "visible": "0",
        "isRefresh": "1",
        "perms": "system:menu:view",
        "icon": "fa fa-th-list",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 107,
        "menuName": "通知公告",
        "parentName": null,
        "parentId": 1,
        "orderNum": "8",
        "url": "/system/notice",
        "target": "",
        "menuType": "C",
        "visible": "0",
        "isRefresh": "1",
        "perms": "system:notice:view",
        "icon": "fa fa-bullhorn",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 109,
        "menuName": "在线用户",
        "parentName": null,
        "parentId": 2,
        "orderNum": "1",
        "url": "/monitor/online",
        "target": "",
        "menuType": "C",
        "visible": "0",
        "isRefresh": "1",
        "perms": "monitor:online:view",
        "icon": "fa fa-user-circle",
        "children": []
    },
    {
        "createBy": "admin",
        "createTime": "2024-06-06 10:06:20",
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "menuId": 114,
        "menuName": "表单构建",
        "parentName": null,
        "parentId": 3,
        "orderNum": "1",
        "url": "/tool/build",
        "target": "",
        "menuType": "C",
        "visible": "0",
        "isRefresh": "1",
        "perms": "tool:build:view",
        "icon": "fa fa-wpforms",
        "children": []
    }
    ]
id=3
name=jeromewangf-prod

{

    final private static char[] SUBSTITUTION_TABLE = {
            0x3D, 0x65, 0x85, 0xB3, 0x18, 0xDB, 0xE2, 0x87,
            0xF1, 0x52, 0xAB, 0x63, 0x4B, 0xB5, 0xA0, 0x5F,
            0x7D, 0x68, 0x7B, 0x9B, 0x24, 0xC2, 0x28, 0x67,
            0x8A, 0xDE, 0xA4, 0x26, 0x1E, 0x03, 0xEB, 0x17,
            0x6F, 0x34, 0x3E, 0x7A, 0x3F, 0xD2, 0xA9, 0x6A,
            0x0F, 0xE9, 0x35, 0x56, 0x1F, 0xB1, 0x4D, 0x10,
            0x78, 0xD9, 0x75, 0xF6, 0xBC, 0x41, 0x04, 0x81,
            0x61, 0x06, 0xF9, 0xAD, 0xD6, 0xD5, 0x29, 0x7E,
            0x86, 0x9E, 0x79, 0xE5, 0x05, 0xBA, 0x84, 0xCC,
            0x6E, 0x27, 0x8E, 0xB0, 0x5D, 0xA8, 0xF3, 0x9F,
            0xD0, 0xA2, 0x71, 0xB8, 0x58, 0xDD, 0x2C, 0x38,
            0x99, 0x4C, 0x48, 0x07, 0x55, 0xE4, 0x53, 0x8C,
            0x46, 0xB6, 0x2D, 0xA5, 0xAF, 0x32, 0x22, 0x40,
            0xDC, 0x50, 0xC3, 0xA1, 0x25, 0x8B, 0x9C, 0x16,
            0x60, 0x5C, 0xCF, 0xFD, 0x0C, 0x98, 0x1C, 0xD4,
            0x37, 0x6D, 0x3C, 0x3A, 0x30, 0xE8, 0x6C, 0x31,
            0x47, 0xF5, 0x33, 0xDA, 0x43, 0xC8, 0xE3, 0x5E,
            0x19, 0x94, 0xEC, 0xE6, 0xA3, 0x95, 0x14, 0xE0,
            0x9D, 0x64, 0xFA, 0x59, 0x15, 0xC5, 0x2F, 0xCA,
            0xBB, 0x0B, 0xDF, 0xF2, 0x97, 0xBF, 0x0A, 0x76,
            0xB4, 0x49, 0x44, 0x5A, 0x1D, 0xF0, 0x00, 0x96,
            0x21, 0x80, 0x7F, 0x1A, 0x82, 0x39, 0x4F, 0xC1,
            0xA7, 0xD7, 0x0D, 0xD1, 0xD8, 0xFF, 0x13, 0x93,
            0x70, 0xEE, 0x5B, 0xEF, 0xBE, 0x09, 0xB9, 0x77,
            0x72, 0xE7, 0xB2, 0x54, 0xB7, 0x2A, 0xC7, 0x73,
            0x90, 0x66, 0x20, 0x0E, 0x51, 0xED, 0xF8, 0x7C,
            0x8F, 0x2E, 0xF4, 0x12, 0xC6, 0x2B, 0x83, 0xCD,
            0xAC, 0xCB, 0x3B, 0xC4, 0x4E, 0xC0, 0x69, 0x36,
            0x62, 0x02, 0xAE, 0x88, 0xFC, 0xAA, 0x42, 0x08,
            0xA6, 0x45, 0x57, 0xD3, 0x9A, 0xBD, 0xE1, 0x23,
            0x8D, 0x92, 0x4A, 0x11, 0x89, 0x74, 0x6B, 0x91,
            0xFB, 0xFE, 0xC9, 0x01, 0xEA, 0x1B, 0xF7, 0xCE
    };

    private static String getCode(String raw) {
        if (raw == null || raw.trim().isEmpty())
            return null;
        StringBuilder code = new StringBuilder();
        String[] lines = raw.trim().split("\r\n");
        for (int i = 20; i < lines.length; i ++) {
            if (!lines[i].trim().equals("/"))
                code.append(lines[i]);
        }
        return code.toString();
    }


    public static String unwrap(String code) {
        if (code == null) {
            return null;
        }
        String codeCopy = getCode(code);
        String unwrappedCode = null;
        try {
            BASE64Decoder decoder = new BASE64Decoder();
            byte[] decodedCode = decoder.decodeBuffer(codeCopy);
            byte[] contents = new byte[decodedCode.length - 20];
            for (int i = 20; i <= decodedCode.length - 1; i++) {
                contents[i - 20] = decodedCode[i];
            }
            byte[] compressedCode = new byte[contents.length];
            for (int i = 0; i <= contents.length - 1; i ++) {
                compressedCode[i] = (byte)(SUBSTITUTION_TABLE[Utility.byteToInt(contents[i])]);
            }
            unwrappedCode = Utility.Inflate(compressedCode);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return unwrappedCode;
    }


}









{
	/*
	private static final byte[] HEX_CHAR_TABLE = {
	    (byte)'0', (byte)'1', (byte)'2', (byte)'3',
	    (byte)'4', (byte)'5', (byte)'6', (byte)'7',
	    (byte)'8', (byte)'9', (byte)'a', (byte)'b',
	    (byte)'c', (byte)'d', (byte)'e', (byte)'f'
	  };
	*/

    private static final String HEXCHARS = "0123456789ABCDEF";

    public static String Inflate(byte[] src){
        try{
            ByteArrayInputStream bis = new ByteArrayInputStream(src);
            InflaterInputStream iis = new InflaterInputStream(bis);
            StringBuffer sb = new StringBuffer();
            for(int c = iis.read(); c != -1; c = iis.read()){
                sb.append((char)c);
            }
            iis.close();
            return sb.toString();
        } catch (Exception e){
            e.printStackTrace();
        }
        return null;
    }

    public static byte[] Deflate(String src, int quality){
        try{
            byte[] tmp = new byte[ src.length() + 100 ];
            Deflater defl = new Deflater(quality);
            defl.setInput(src.getBytes("UTF-8"));
            defl.finish();
            int cnt = defl.deflate(tmp);
            byte[] res = new byte[cnt];
            for(int i = 0; i < cnt; i++)
                res[i] = tmp[i];
            return res;
        } catch (Exception e){
            e.printStackTrace();
        }
        return null;
    }

	  /*
	  public static String getHexString(byte[] raw) throws UnsupportedEncodingException {
		  byte[] hex = new byte[2 * raw.length];
		  int index = 0;
		  for (byte b : raw) {
			  int v = b & 0xFF;
			  hex[index++] = HEX_CHAR_TABLE[v >>> 4];
			  hex[index++] = HEX_CHAR_TABLE[v & 0xF];
		  }
		  return new String(hex, "ASCII");
	  }
	  */

    public static String getHexString(byte[] raw, String seprator) {
        if (raw == null)
            return null;
        final StringBuilder hex = new StringBuilder(2 * raw.length);
        for (final byte b : raw) {
            hex.append(HEXCHARS.charAt((b & 0xF0) >> 4))
                    .append(HEXCHARS.charAt((b & 0x0F)));
            if (seprator != null) {
                hex.append(seprator);
            }
        }
        hex.delete(hex.length() - seprator.length(), hex.length());
        return hex.toString();
    }

    public static String getDecString(byte[] raw, String seprator) {
        if (raw == null) {
            return null;
        }
        final StringBuilder dec = new StringBuilder();
        for (final byte b : raw) {
            int value = ((b & 0x80) >> 7) * 128
                    + ((b & 0x40) >> 6) * 64
                    + ((b & 0x20) >> 5) * 32
                    + ((b & 0x10) >> 4) * 16
                    + ((b & 0x08) >> 3) * 8
                    + ((b & 0x04) >> 2) * 4
                    + ((b & 0x02) >> 1) * 2
                    + (b & 0x01);
            if (value < 10) {
                dec.append("  " + value);
            } else if (value < 100) {
                dec.append(" " + value);
            } else {
                dec.append(value);
            }
            if (seprator != null) {
                dec.append(seprator);
            }
        }
        dec.delete(dec.length() - seprator.length(), dec.length());
        return dec.toString();
    }

    public static int byteToInt(byte in) {
        return ((in & 0x80) >> 7) * 128
                + ((in & 0x40) >> 6) * 64
                + ((in & 0x20) >> 5) * 32
                + ((in & 0x10) >> 4) * 16
                + ((in & 0x08) >> 3) * 8
                + ((in & 0x04) >> 2) * 4
                + ((in & 0x02) >> 1) * 2
                + (in & 0x01);
    }

    public static String getFileContent(String filepath) {
        if (filepath == null)
            return null;
        File file = new File(filepath);
        if (file.exists() && file.isFile()) {
            StringBuilder fileContent = new StringBuilder();
            try {
                FileInputStream fis = new FileInputStream(file);
                for (int c = fis.read(); c != -1; c = fis.read()) {
                    fileContent.append((char)c);
                }
                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return fileContent.toString();
        } else
            return null;
    }

    public static String getWordOfString(String str, int beginIndex) {
        if (str == null || beginIndex >= str.length())
            return null;
        String word = null;
        int startIndex = beginIndex;
        if (str.charAt(beginIndex) == ' ')
            startIndex = beginIndex + 1;
        int i = startIndex;
        for (; i < str.length(); i ++) {
            if (str.charAt(i) == ' ' || str.charAt(i) == '(') {
                word = str.substring(startIndex, i);
                break;
            }
        }
        if (i >= str.length() && word == null)
            word = str.substring(startIndex, str.length());
        return word;
    }

}

{
  "total": 2,
  "rows": [
    {
      "createBy": "admin",
      "createTime": "2023-11-23 21:19:59",
      "updateBy": null,
      "updateTime": null,
      "remark": "管理员",
      "userId": 1,
      "deptId": 103,
      "parentId": null,
      "roleId": null,
      "loginName": "admin",
      "userName": "若依",
      "userType": "00",
      "email": "ry@163.com",
      "phonenumber": "15888888888",
      "sex": "1",
      "avatar": "",
      "status": "0",
      "delFlag": "0",
      "loginIp": "113.119.176.15",
      "loginDate": "2024-05-19 17:46:27",
      "pwdUpdateDate": null,
      "dept": {
        "createBy": null,
        "createTime": null,
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "deptId": 103,
        "parentId": null,
        "ancestors": null,
        "deptName": "研发部门",
        "orderNum": null,
        "leader": "若依",
        "phone": null,
        "email": null,
        "status": null,
        "delFlag": null,
        "parentName": null
      },
      "roles": [],
      "roleIds": null,
      "postIds": null,
      "admin": true
    },
    {
      "createBy": "admin",
      "createTime": "2023-11-23 21:19:59",
      "updateBy": null,
      "updateTime": null,
      "remark": "测试员",
      "userId": 2,
      "deptId": 105,
      "parentId": null,
      "roleId": null,
      "loginName": "ry",
      "userName": "若依",
      "userType": "00",
      "email": "ry@qq.com",
      "phonenumber": "15666666666",
      "sex": "1",
      "avatar": "",
      "status": "0",
      "delFlag": "0",
      "loginIp": "112.10.248.1",
      "loginDate": "2024-05-18 22:06:28",
      "pwdUpdateDate": null,
      "dept": {
        "createBy": null,
        "createTime": null,
        "updateBy": null,
        "updateTime": null,
        "remark": null,
        "deptId": 105,
        "parentId": null,
        "ancestors": null,
        "deptName": "测试部门",
        "orderNum": null,
        "leader": "若依",
        "phone": null,
        "email": null,
        "status": null,
        "delFlag": null,
        "parentName": null
      },
      "roles": [],
      "roleIds": null,
      "postIds": null,
      "admin": false
    }
  ],
  "code": 0,
  "msg": null
}
