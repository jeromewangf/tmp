id=2
name=jeromewangf-test
privateKey=MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALgJYv4fAg/dxk2Tn2q44ybxK+M+6ErF4/AgQRvWAgTUHpQhBZ7OCwCbvZzAI+K5wmF9pIb0GwcmsyRxL2qG2um8mbJrRyUqHoTfd00h9BmXbcUUtGqjP0fG5k8sQWc19uR8uy3pc2NcF9cZG6HbNim3RzdnozqDaYhS4W7WnflLAgMBAAECgYBhARGcwNtlYZBU86rjpfCVZimr7kyinQw4Vcf71CHcSbKUgZNk0VYbS/v105EWwLMkkAVY3PIiItPqMX68t7hK9eaz2rh6/RUszWSmkogQsI2rUqeNL1fnHXz2fALPwWdghYWRE3UGy/cJS3S2CQLBl0k1puqO4mqEZL62WUIXAQJBAOxmJE1hkaLLv3znFzE1cW0wxBTUxyFCh+LuQWKhrCMDosMBieRqCA5Yrb1rh6MraknXh6pVkrcdefbHtMPey7MCQQDHS8pXbprWxCwrTB7D7yEqIcM4aWwVN8BTKR0iuOZSc+UGKO6nb9i/PM92BqZjuvzkhcOKULIEjL8of3/La/AJAkEAzgYGxVmvLw4bCKPt1nkZLWw+t1jpYtc0zlWOroLwHmPgycrhfivacYZfhKHeSBpiO5CXL5/8iZIq5SQPKlVVeQJBAJ4tEjBoka4pTuEibjyWW50j5NyuF2GTuSqHtB8t32fLohdMf3YW+FF4AzSqvH7lFviNDhCGUXP4/XM4FoauaXkCQApD+XcNyseXaCD21wJHw0rz/pp80jOYxrmCEIuFCylAP+myWbh6tYs9OnD3G+VhGBAEzyyMn7hvz3xjy09Z1Vg=
tencent_map_key=W4WBZ-TUD65-IDAIR-QPM36-HMFQ5-CGBZP


package com.prj.common.controller;

import com.alibaba.fastjson2.JSON;
import com.alibaba.fastjson2.JSONObject;
import com.github.pagehelper.PageHelper;
import com.prj.framework.oauth.jwt.IJwtInfo;
import com.prj.framework.oauth.service.PermissionService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.ModelAttribute;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.Enumeration;

/**
 *
 */

@Component
public abstract class BaseSystemController extends AbstractController {

    protected HttpServletRequest request;

    protected HttpServletResponse response;

    protected HttpSession session;

    public static final String PAGE_NUM = "pageNum";

    public static final String PAGE_SIZE = "pageSize";

    public static final String GET_METHOD = "GET";
    public static final String POST_METHOD = "POST";

    @Autowired
    private PermissionService permissionService;

    // 注解 @ModelAttribute，用来将请求参数绑定到 Model 对象
    // 在同一个控制器中，标注了@ModelAttribute的方法实际上会在@RequestMapping方法之前被调用。
    @ModelAttribute
    public void setReqAndRes(HttpServletRequest request, HttpServletResponse response) {
        this.request = request;
        this.response = response;
        this.session = request.getSession();
    }

    public IJwtInfo analysisInfo() {
        return permissionService.getJWTUser(request);
    }

    protected JSONObject getRequestBody(HttpServletRequest request) {
        StringBuilder stringBuilder = new StringBuilder();
        try {
            BufferedReader streamReader = new BufferedReader(new InputStreamReader(request.getInputStream(), StandardCharsets.UTF_8));
            String inputStr;
            while ((inputStr = streamReader.readLine()) != null) {
                stringBuilder.append(inputStr);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return JSON.parseObject(stringBuilder.toString());
    }

    protected JSONObject getRequestParam(HttpServletRequest request) {
        Enumeration<String> parameterNames = request.getParameterNames();
        JSONObject jsonObject = new JSONObject();
        while (parameterNames.hasMoreElements()) {
            String key = parameterNames.nextElement();
            String value = request.getParameter(key);
            jsonObject.put(key, value);
        }
        return jsonObject;
    }

    protected void startPage(HttpServletRequest request) {
        String method = request.getMethod();
        if (method.equalsIgnoreCase(POST_METHOD)) {
            JSONObject requestBody = getRequestBody(request);
            if (requestBody != null) {
                int pageNum = requestBody.getIntValue(PAGE_NUM, 1);
                int pageSize = requestBody.getIntValue(PAGE_SIZE, 10);
                PageHelper.startPage(pageNum, pageSize);
            }
        } else if (method.equalsIgnoreCase(GET_METHOD)) {
            JSONObject requestParam = getRequestParam(request);
            if (requestParam != null) {
                int pageNum = requestParam.getIntValue(PAGE_NUM, 1);
                int pageSize = requestParam.getIntValue(PAGE_SIZE, 10);
                PageHelper.startPage(pageNum, pageSize);
            }
        }

    }

}


    public void setData(Object data) {
        this.data = data;
    }
}
